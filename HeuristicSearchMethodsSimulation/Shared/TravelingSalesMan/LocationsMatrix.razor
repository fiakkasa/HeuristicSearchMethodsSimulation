<Condition Evaluation="Data?.Count > 0">
    <Match>
        <div class="traveling-salesman-matrix-container @CssClass">
            <div class="table-responsive">
                <table class="table table-striped table-sm text-center m-0">
                    <thead>
                        <Condition Evaluation="Algorithm == TravelingSalesManAlgorithms.Evolutionary">
                            <Match>
                                <tr>
                                    <th class="small"></th>
                                    <Iterations T="string" Items="HeaderIndices">
                                        <th class="small align-middle">@context</th>
                                    </Iterations>
                                </tr>
                            </Match>
                        </Condition>
                        <tr>
                            <th class="small align-middle">Distance (Km)</th>
                            <Iterations T="string" Items="Data![0].Xlabels">
                                <th class="small align-middle">@context</th>
                            </Iterations>
                        </tr>
                    </thead>
                    <tbody>
                        <Iterations T="LocationRow" Items="Data">
                            <tr>
                                <th class="small align-middle text-nowrap">@context.Ylabel</th>
                                <Iterations T="LocationToLocation" Items="context.Collection" Context="childContext">
                                    <td class="@CellCssClass(childContext) align-middle">
                                        @childContext.DistanceInKilometers.ToFormattedDistance(true)
                                    </td>
                                </Iterations>
                            </tr>
                        </Iterations>
                    </tbody>
                </table>
            </div>
            <NumberOfUniqueLocations Value="NumberOfUniqueRoutes" CssClass="mt-2" />
        </div>
    </Match>
</Condition>

@code {
    [Parameter] public string? CssClass { get; set; }
    [Parameter] public List<LocationRow>? Data { get; set; }
    [Parameter] public long? NumberOfUniqueRoutes { get; set; }
    [Parameter] public TravelingSalesManAlgorithms? Algorithm { get; set; }

    private IEnumerable<string> HeaderIndices => Data switch 
    {
        { Count: > 0 and var count } => Enumerable.Range(0, count).Take(count).Select(x => x == 0 ? string.Empty : x.ToString()),
       _ => Enumerable.Empty<string>()
    };

    private string CellCssClass(LocationToLocation cell) => (
        cell switch
        {
            { IsHighlightedDistance: true } => "min-distance bg-info bg-opacity-25",
            { A.Id: var a, B.Id: var b } when a == b => "text-muted",
            _ => string.Empty
        }
    );
}
