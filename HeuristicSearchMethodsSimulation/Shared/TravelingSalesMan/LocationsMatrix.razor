<Condition Evaluation="Data?.Count > 0">
    <Match>
        <div class="traveling-salesman-matrix-container @CssClass">
            <div class="table-responsive">
                <table class="table table-striped text-center m-0">
                    <thead>
                        <tr>
                            <th>Distance (Km)</th>
                            <Iterations T="string" Items="Data![0].Xlabels">
                                <th>@context</th>
                            </Iterations>
                        </tr>
                    </thead>
                    <tbody>
                        <Iterations T="LocationRow" Items="Data">
                            <tr>
                                <th>@context.Ylabel</th>
                                <Iterations T="LocationToLocation" Items="context.Collection" Context="childContext">
                                    <td class="@CellCssClass(context, childContext)">
                                        @childContext.DistanceInKilometers.ToString("#0.##")
                                    </td>
                                </Iterations>
                            </tr>
                        </Iterations>
                    </tbody>
                </table>
            </div>
            <NumberOfUniqueLocations Value="NumberOfUniqueRoutes" CssClass="mt-2" />
        </div>
    </Match>
</Condition>

@code {
    [Parameter] public string? CssClass { get; set; }
    [Parameter] public List<LocationRow>? Data { get; set; }
    [Parameter] public long NumberOfUniqueRoutes { get; set; } = 0L;

    private string CellCssClass(LocationRow row, LocationToLocation cell) => (
        (row, cell) switch
        {
            { row: { Min: { } }, cell: { IsShortestDistance: true } } => "min-distance bg-info bg-opacity-25",
            { row: _, cell: { OrdinalFromOrigin: 0 } } => "text-muted",
            _ => string.Empty
        } + $" ordinal-from-origin-{cell.OrdinalFromOrigin}"
    ).Trim();
}
