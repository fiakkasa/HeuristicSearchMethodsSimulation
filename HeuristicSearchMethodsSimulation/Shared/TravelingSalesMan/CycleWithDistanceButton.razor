<Condition Evaluation="Text is { Length: > 0}">
	<Match>
		<button type="button"
				class="btn btn-sm w-100 border-0 @ButtonCssClass @CssClass"
				disabled="@Disabled"
				@onclick="OnSelection.InvokeAsync">
			<span>@Text</span>
			<Condition Evaluation="DistanceInKilometers >= 0">
				<Match>
					<span class="text-nowrap">(@DistanceInKilometers?.ToString("#0.## Km"))</span>
				</Match>
			</Condition>
		</button>
	</Match>
</Condition>

@code {
	[Parameter] public string? CssClass { get; set; }
	[Parameter] public bool Disabled { get; set; }
	[Parameter] public bool Selected { get; set; }
	[Parameter] public string? Text { get; set; } = string.Empty;
	[Parameter] public double? DistanceInKilometers { get; set; }

	[Parameter] public EventCallback<ExhaustiveItem> OnSelection { get; set; }

	private string ButtonCssClass => (Selected, Disabled) switch
	{
		(Selected: true, Disabled: true) => "btn-outline-info",
		(Selected: true, Disabled: false) => "btn-outline-info disabled opacity-100",
		(Selected: false, Disabled: true) => "btn-outline-secondary disabled text-black",
		(Selected: false, Disabled: false) => "btn-outline-secondary text-black"
	};
}
