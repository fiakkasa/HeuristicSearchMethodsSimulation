<div class="traveling-salesman-range-selector-container d-inline-flex flex-wrap align-items-center @CssClass @DisabledClass">
    <div class="me-2">Number of cities:</div>
    <div class="range-selector-container flex-fill d-flex align-items-center me-2">
        <input type="range"
               class="range-selector @DisabledClass"
               min="@Min"
               max="@Max"
               step="@Step"
               value="@Value"
               disabled="@Disabled"
               @oninput="OnInput"
               @onchange="OnValue" />
    </div>
    <div>@Value</div>
</div>

@code {
    [Parameter] public string? CssClass { get; set; }
    [Parameter] public int Min { get; set; } = 0;
    [Parameter] public int Max { get; set; } = 100;
    [Parameter] public int Step { get; set; } = 1;
    [Parameter] public int Value { get; set; }
    [Parameter] public EventCallback<int> ValueChanged { get; set; }
    [Parameter] public bool Disabled { get; set; }
    private string DisabledClass => Disabled ? "disabled" : string.Empty;

    protected override void OnParametersSet()
    {
        if (Min < 0) Min = 0;

        if (Step < 0) Step = 1;

        if (Max < Min || Max < Step) Max = Math.Max(Min, Step);
    }

    private void OnInput(ChangeEventArgs e)
    {
        if (Disabled) return;

        int.TryParse(e.Value?.ToString() ?? "0", out var value);
        Value = value;
    }

    private async Task OnValue(ChangeEventArgs e)
    {
        if (Disabled) return;

        OnInput(e);
        await ValueChanged.InvokeAsync(Value).ConfigureAwait(true);
    }
}
