<Condition Evaluation="DisplayExcessRecordsMessage">
	<Match>
		<div class="traveling-salesman-exhaustive-table-container overflow-auto @CssClass">
			<h6 class="text-danger">
				There are too many candidate solutions to exhaustively display on the screen. Please try another search method.
			</h6>
		</div>
	</Match>
	<NotMatch>
		<Condition Evaluation="Collection?.Count > 0">
			<NotMatch>
				<div class="traveling-salesman-exhaustive-table-container overflow-auto @CssClass">
					<h6 class="text-secondary">
						It would appear that no routes are available. Please try increasing the number of cities.
					</h6>
				</div>
			</NotMatch>
			<Match>
				<div class="traveling-salesman-exhaustive-table-container overflow-auto row @CssClass">
					<Iterations T="ExhaustiveItem" Items="Collection">
						<div class="col-12 col-lg-6">
							<button type="button" 
							        class="btn btn-sm w-100 @(context.Id == SelectedId ? "text-info" : string.Empty)"
									disabled="@Disabled" 
								    @onclick="OnSelectionChange(context)">
								<span>@context.Text</span>
								<span>(@context.DistanceInKilometers.ToString("#0.## Km"))</span>
							</button>
						</div>
					</Iterations>
				</div>
			</Match>
		</Condition>
	</NotMatch>
</Condition>

@code {
	[Parameter] public string? CssClass { get; set; }
	[Parameter] public bool Disabled { get; set; }
	[Parameter] public List<ExhaustiveItem>? Collection { get; set; }
	[Parameter] public string? SelectedId { get; set; }
	[Parameter] public bool DisplayExcessRecordsMessage { get; set; }
	[Parameter] public EventCallback<ExhaustiveItem> OnSelection { get; set; }

	private Func<Task> OnSelectionChange(ExhaustiveItem item) =>
		() => OnSelection.InvokeAsync(item);
}
